#!/bin/bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

. $DIR/lib.sh

# we're going to restore it to this.
start_name=$( tmux display-message -p '#W' )
start_dir=$(pwd)

tmux rename-window "mpv-once" 2> /dev/null

function finish {
  tmux rename-window "$start_name"
}
trap finish EXIT

# This allows remote control
#if [[ -n "$1" ]]; then
#  mpv $1/*mp3
#  exit
#fi

filter=${1:-.}

echo */* | tr ' ' '\n' > .listen_all
touch .listen_done
for i in $(cat .listen_all .listen_done | awk ' { print $1 } ' | grep -E "$filter" | sort | uniq -u | shuf); do
  n=__nothing
  ls $i/*.mp3 > /dev/null 2>&1
  if [[ $? == "0" || -e $i/url-list.m3u ]]; then
    while [[ 0 ]]; do
      if [[ -e $i/domain ]]; then
        url=$(< $i/domain )
      else
        label=$( dirname $i )
        [[ -e $label/domain ]] && domain=$(< $label/domain ) || domain=${label}.bandcamp.com
        release=$( basename $i )
        url="https://$domain/album/$release"
      fi

      echo
      echo $url
      echo

      if [[ -e $i/url-list.m3u ]]; then
        while [[ 0 ]]; do
          mpv --start=0:45 --no-audio-display --term-playing-msg='\n${media-title}' "$i/url-list.m3u"
          if [[ $? == "2" ]]; then
            echo "woops, need to get a new set of urls"
            set -x
            get_urls "$url" "$i"
            set +x
            continue
          fi
          break
        done

      else
        mpv --start=0:45 --no-audio-display "$i"/*.mp3
      fi

      while [[ 0 ]]; do
        read -p "$i >> " -e n
        [[ $n == 'i' ]] && echo $url
        [[ "$n" =~ ^(dl|x|r|s|[1-5]|pu)$ ]] && break
      done

      [[ $n == 'dl' ]] && get_mp3s "$url" "$i"
      [[ $n == 'x' ]] && exit
      [[ $n == 'r' ]] || break
    done

    if [[ $n == 'pu' ]]; then 
      album-purge "$i" $start_dir
      n="__purge"
    elif [[ $n == 's' ]]; then
      echo "Skipping ... "
      n="__skipping"
    else
      n="__rating_$n"
    fi
  fi
  echo $i $n $(date +%Y%m%d) >> .listen_done
done
