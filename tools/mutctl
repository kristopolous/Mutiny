#!/bin/bash
#
# This is a mapping of 
#   /usr/include/X11/keysymdef.h and
#
TMP=/tmp/mutiny
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MPVCONTROL=$DIR/tools/mutctl
[[ -e $DIR/prefs.sh ]] && . $DIR/prefs.sh

[[ -e "$TMP" ]] || mkdir "$TMP"
key=$1

if [[ $key == 'prefs' ]]; then 
  mutlib prefs
  exit 0
fi

if [[ -n "$HOST" && "$HOST" != "localhost" ]]; then
  timeout 5s ssh "$HOST" "$MPVCONTROL $1"
  exit 0
fi


volume() {
  pactl list sinks short | grep RUNNING | cut -f 1 | while read source ; do
    docmd "pactl set-sink-volume $source $1"
  done
  exit
}

docmd() {
  echo -e $(date +%s) $(whoami) "$key->($control)\n\t$1" >> "$TMP"/keycode
  MUT_TMP=$TMP $1
}

if [[ $1 == 'd' ]]; then
  ( docmd "mutlib details" ) | xmessage -timeout 14 -file -
  exit
fi

declare -A mapping=( [0]='volup' [9]='voldn' [q]='quit' [up]='forward 60' [down]='back 60' [left]='back' [right]='forward' [p]='p' [return]='ENTER' [space]='pauseplay' [comma]='prev' [period]='next' [s]='s' [r]='r' )

[[ -z "$1" ]] && printf "%s\n" "${!mapping[@]}" "${mapping[@]}" | pr -2t && exit 
[[ ${mapping[$1]+_} ]] && control=${mapping[$1]} || control=$1
if [[ "$control" =~ (.*60|volup|voldn|forward|prev|quit|back|next|pauseplay) ]]; then 
  docmd "$DIR/ipc-do.js $control"
else
  echo -e "$control" > $TMP/cmd_sock
fi
