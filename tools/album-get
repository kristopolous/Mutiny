#!/bin/bash

if [[ $# = 0 ]] ; then
  ls | sort | xargs -n 1 -P 2 ${BASH_SOURCE[0]} 
fi

base_path=$PWD
while [[ $# -gt 0 ]]; do
  arg=${1%%.}

  if [[ $arg =~ \. ]]; then
    if [[ -n "$2" ]]; then 
      base="$2" 
      domain=$arg
      base_url=$arg
      shift
    else 
      base=$( echo $arg | sed -n 's/\..*$//p' )
      base_url=$arg
    fi
    extra=
  else
    base=$arg
    base_url=$base.bandcamp.com
    extra=music
  fi
  shift

  [[ -e $base ]] || mkdir $base

  base_name=$base
  if [[ -e $base/domain ]]; then
    base_url=$(< $base/domain )
    base_name=$base_url
  elif [[ -n "$domain" ]]; then
    echo $base_url > $base/domain
  fi
  ttl=$(ls $base | grep -v domain | wc -l)
  echo "♫ $base_name ♫ ($ttl)"

  cd $base
  starting_point=$PWD

  url=https://$base_url/$extra
  for full in $(curl -s $url |  grep -Po '(?<=")[\w:\/\.]+(?<=(album|track)\/)[^?'"'"'"]*' | sort | uniq ); do
    # sometimes we get x-dom references, sometimes it's relevant. We resolve that below.
    i=$(basename "$full")
    place="$starting_point/$i"
    isnew=

    if [[ ! -e "$place" ]]; then
      isnew=true
      mkdir "$place"
    fi

    # if we haven't any files then we just try to download from it again... 
    exitcode=0
    if [[ -e $place/exit-code ]];  then
      exitcode=$(< $place/exit-code )
    fi

    count=$( ls "$place"/* 2> /dev/null | grep -Ev '\/(exit-code|domain)$' | wc -l )
    if [[ "$count" = "0" || $exitcode != "0" ]]; then
      cd "$place"
      echo "--- $place"

      # here's where we look for the full url
      if [[ $full =~ : ]]; then
        url=$full
        echo $full > "$place"/domain
      else
        url=https://$base_url$full
      fi
      echo "  ⇩ $url"

      if [[ -e $place/no-files ]]; then
        continue
      fi

      # this means we've been here before. We can use the -g 
      # option to see if nothing ought to be downloaded in which
      # case we mark it as skippable
      if [[ -z "$isnew" ]]; then
        # we put in some kind of backoff strategy
        sleep 10
        track_count=$( youtube-dl -f mp3-128 -g -- "$url" | wc -l )
        if [[ "$track_count" = "0" ]]; then
          echo "  ( no files )"
          touch "$place"/no-files
          continue
        fi
      fi

      # sometimes people are posting wav files ... really, that's crazy
      #youtube-dl -f mp3-128 -- "$url"
      youtube-dl -gf mp3-128 -- "$url" > url-list.txt
      echo $? > "$place"/exit-code
      echo "$(date +%Y%m%d) $place" >> "$base_path/.dl_history"
    fi
  done
done
